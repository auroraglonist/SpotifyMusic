{"version":3,"sources":["component/Artist.js","component/Search.js","component/Track.js","App.js","reportWebVitals.js","index.js"],"names":["Artist","props","artist","name","genres","images","followers","className","src","url","alt","total","map","item","key","Search","state","title","onChangeTitle","bind","submitHandler","e","this","setState","target","value","preventDefault","console","log","search","htmlFor","type","onChange","onClick","Component","Track","playing","audio","preveiwUrl","trackIcon","playAudio","Audio","pause","previewUrl","play","tracks","preview_url","album","URI","App","aristInfo","searchArtist","fetch","then","response","json","result","artists","artistInfo","items","id","catch","err","message","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94487cf9.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./aritist.css\"\r\n\r\nexport default function Artist(props) {\r\n    if(!props.artist) return null;\r\n\r\n    const { name, genres, images, followers } = props.artist;\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6 col-md-offset-3 well well-lg\">\r\n                <h3 className=\"text-center\">{name}</h3>\r\n                <img src={images[1].url} alt=\"\" className=\"img-responsive img-circle\" />\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        Followers <span className=\"pull-right\">{followers.total}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                    Genres\r\n    \r\n\r\n                            <ul className=\"list-group\">\r\n                                {\r\n                                    genres.map((item, key) =>{\r\n                                    return <li className=\"list-group-item\" key={key}>{item}</li>\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        \r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react'\r\n\r\nexport class Search extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: ''\r\n        };\r\n\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n    }\r\n\r\n    onChangeTitle(e){\r\n        this.setState({\r\n            title: e.target.value\r\n        });\r\n    }\r\n\r\n    submitHandler(e) {\r\n        e.preventDefault(); \r\n        console.log('title', this.state.title);\r\n        this.props.search(this.state.title);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 col-md-offset-3 well well-lg\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"artist\">Search</label>\r\n                        <div className=\"input-group\">\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.title} onChange={this.onChangeTitle}/>\r\n                        <div className=\"input-group-btn\">\r\n                            <button className=\"btn btn-info\" onClick={this.submitHandler}>\r\n                            <span className=\"glyphicon glyphicon-search\"></span>\r\n                            </button>\r\n                           \r\n                        </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Track extends Component {\r\n\r\n    state = {\r\n        playing: false,\r\n        audio : null,\r\n        preveiwUrl: null\r\n    };\r\n\r\n     //play icons\r\n     trackIcon = (url) => {\r\n        if(!url) {\r\n            return <span className=\"text-danger\"> No track</span>\r\n        }\r\n         \r\n        if(this.state.playing && this.state.preveiwUrl === url) {\r\n            return <span className=\"glyphicon glyphicon-pause\"></span>\r\n        }\r\n\r\n        return <span className=\"glyphicon glyphicon-play\"></span>\r\n    }\r\n    \r\n    // audio Player\r\n    playAudio = (url) => {\r\n        const audio = new Audio(url);\r\n        //initial play\r\n        if (!this.state.playing) {\r\n            audio.play();\r\n            this.setState({\r\n                playing: true,\r\n                audio,\r\n                previewUrl: url\r\n            });\r\n        } else {\r\n            // pause()\r\n            this.state.audio.pause();\r\n\r\n            // from pause to play\r\n            if (this.state.previewUrl === url) {\r\n                this.setState({ playing: false });\r\n            } else {\r\n                audio.play();\r\n                this.setState({\r\n                    audio,\r\n                    previewUrl: url\r\n                });\r\n            }\r\n        }\r\n    }\r\n     \r\n\r\n    render() {\r\n        const { tracks } = this.props;\r\n        return (\r\n            <div className=\"row\"> \r\n                {\r\n                    tracks.map((item, key) => {\r\n                        return (\r\n                            <div className=\"col-md-4\" key={key}>\r\n                                <div className=\"panel panel-primary\" onClick={()=>this.playAudio(item.preview_url)}>\r\n                                    <div className=\"panel-heading\">\r\n                                        <h3 className=\"panel-title\">{item.name}</h3>\r\n                                    </div>\r\n                                    <div className=\"panel-body\">\r\n                                        <img src={item.album.images[1].url}  className=\"img-responsive img-circle\"/>\r\n                                    </div>\r\n                                    <div className=\"panel-footer\">\r\n                                        <button className=\"btn btn-primary\">\r\n                                            {this.trackIcon(item.preview_url)}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n   \r\n}","import React from 'react';\nimport Artist from './component/Artist'\nimport Search from './component/Search';\nimport Track from './component/Track';\nconst URI = \"https://spotify-api-wrapper.appspot.com\";\n\nexport default class App extends React.Component {\n\n  state = {\n    aristInfo: null,\n    tracks: []\n  };\n\n  componentDidMount() {\n    this.searchArtist(\"A R Rehman\");\n  }\n\n  searchArtist = (name) => {\n    fetch(`${URI}/artist/${name}`)\n      .then(response => response.json())\n      .then(result => {\n        console.log(result);\n        if (result.artists.total > 0) {\n          const artistInfo = result.artists.items[0];\n          this.setState({\n            artistInfo\n          });\n \n          // find tracks\n          fetch(`${URI}/artist/${artistInfo.id}/top-tracks`)\n          .then(response => response.json()\n          .then(result => {\n            console.log('tracks', result.tracks);\n            this.setState({\n              tracks: result.tracks\n            });\n          })\n          .catch(err => console.log(err.message))\n          )\n        }\n\n      })\n      .catch(err => console.log(err.message));\n  }\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12 col-sm-12 jumbotron text-center\">\n            <h3>Music Player</h3>\n          </div>\n        </div>\n        <Search search={this.searchArtist}/>\n        <Artist artist={this.state.artistInfo} />\n        <Track tracks={this.state.tracks} />\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}